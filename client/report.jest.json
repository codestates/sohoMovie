{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":1,"numPassedTests":19,"numPendingTestSuites":0,"numPendingTests":13,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":32,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1648781536057,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Bare Minimum Requirements","MovieRankListEntry unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements MovieRankListEntry unit test movie props로 전달받은 영화의 제목을 표현해야 합니다.","location":null,"status":"passed","title":"movie props로 전달받은 영화의 제목을 표현해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","MovieRankListEntry unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements MovieRankListEntry unit test movie props로 전달받은 영화의 평점을 표현해야 합니다.","location":null,"status":"passed","title":"movie props로 전달받은 영화의 평점을 표현해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","MovieRankListEntry unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements MovieRankListEntry unit test movie props로 전달받은 영화의 러닝 타임을 표현해야 합니다.","location":null,"status":"passed","title":"movie props로 전달받은 영화의 러닝 타임을 표현해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","MovieRankListEntry unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements MovieRankListEntry unit test movie props로 전달받은 영화의 장르를 표현해야 합니다.","location":null,"status":"passed","title":"movie props로 전달받은 영화의 장르를 표현해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","MovieRankListEntry unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements MovieRankListEntry unit test 여러 영화 장르 렌더링 시, genre를 key로 지정해야 합니다.","location":null,"status":"passed","title":"여러 영화 장르 렌더링 시, genre를 key로 지정해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","MovieRankList unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements MovieRankList unit test movies props로 빈 배열을 전달받은 경우, MovieRankListEntry가 존재하면 안 됩니다.","location":null,"status":"passed","title":"movies props로 빈 배열을 전달받은 경우, MovieRankListEntry가 존재하면 안 됩니다."},{"ancestorTitles":["Bare Minimum Requirements","MovieRankList unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements MovieRankList unit test movies props로 빈 배열을 전달받은 경우, 영화 목록 대신 \"영화 목록이 비었습니다\"라는 문구를 표시해야 합니다.","location":null,"status":"passed","title":"movies props로 빈 배열을 전달받은 경우, 영화 목록 대신 \"영화 목록이 비었습니다\"라는 문구를 표시해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","MovieRankList unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements MovieRankList unit test movies props에 전달된 영화정보의 개수만큼 MovieRankListEntry를 렌더링 해야 합니다.","location":null,"status":"passed","title":"movies props에 전달된 영화정보의 개수만큼 MovieRankListEntry를 렌더링 해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","MovieRankList unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements MovieRankList unit test MovieRankListEntry를 여러 개 렌더링할 때, 고유의 key를 가지고 있어야 합니다.","location":null,"status":"passed","title":"MovieRankListEntry를 여러 개 렌더링할 때, 고유의 key를 가지고 있어야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","CurrentMovie unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements CurrentMovie unit test movie props로 전달받은 현재 영화의 제목을 표현해야 합니다.","location":null,"status":"passed","title":"movie props로 전달받은 현재 영화의 제목을 표현해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","CurrentMovie unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements CurrentMovie unit test movie props로 전달받은 현재 영화의 포스터(medium 사이즈)를 표현해야 합니다.","location":null,"status":"passed","title":"movie props로 전달받은 현재 영화의 포스터(medium 사이즈)를 표현해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","CurrentMovie unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements CurrentMovie unit test movie props로 전달받은 현재 영화의 평점을 표현해야 합니다.","location":null,"status":"passed","title":"movie props로 전달받은 현재 영화의 평점을 표현해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","CurrentMovie unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements CurrentMovie unit test movie props로 전달받은 현재 영화의 러닝 타임을 표현해야 합니다.","location":null,"status":"passed","title":"movie props로 전달받은 현재 영화의 러닝 타임을 표현해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","CurrentMovie unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements CurrentMovie unit test movie props로 전달받은 현재 영화의 설명을 표현해야 합니다.","location":null,"status":"passed","title":"movie props로 전달받은 현재 영화의 설명을 표현해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","CurrentMovie unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements CurrentMovie unit test 영화 정보를 movie props로 전달하지 않으면, \"영화를 선택하세요\"라는 메시지를 표시해야 합니다.","location":null,"status":"passed","title":"영화 정보를 movie props로 전달하지 않으면, \"영화를 선택하세요\"라는 메시지를 표시해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","CurrentMovie unit test"],"failureMessages":[],"fullName":"Bare Minimum Requirements CurrentMovie unit test 영화 정보를 movie props로 전달하지 않아도 렌더링 시 에러가 나지 않아야 합니다.","location":null,"status":"passed","title":"영화 정보를 movie props로 전달하지 않아도 렌더링 시 에러가 나지 않아야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","App integration test"],"failureMessages":[],"fullName":"Bare Minimum Requirements App integration test 현재 선택한 영화와 영화 목록을 React state로 다뤄야 합니다.","location":null,"status":"passed","title":"현재 선택한 영화와 영화 목록을 React state로 다뤄야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","App integration test"],"failureMessages":[],"fullName":"Bare Minimum Requirements App integration test 영화 목록 클릭 시, 현재 영화정보를 업데이트해야 합니다.","location":null,"status":"passed","title":"영화 목록 클릭 시, 현재 영화정보를 업데이트해야 합니다."},{"ancestorTitles":["Bare Minimum Requirements","App integration test"],"failureMessages":[],"fullName":"Bare Minimum Requirements App integration test import한 mockMovie 대신, movieDataApi.js 앤드포인트로부터 영화 목록을 직접 응답받아 이용합니다.","location":null,"status":"passed","title":"import한 mockMovie 대신, movieDataApi.js 앤드포인트로부터 영화 목록을 직접 응답받아 이용합니다."},{"ancestorTitles":["Advanced Challenge","getQueryString unit test"],"failureMessages":[],"fullName":"Advanced Challenge getQueryString unit test limit이 3, page가 2, genre가 null일 때, 유효한 쿼리 파라미터를 리턴해야 합니다.","location":null,"status":"pending","title":"limit이 3, page가 2, genre가 null일 때, 유효한 쿼리 파라미터를 리턴해야 합니다."},{"ancestorTitles":["Advanced Challenge","getQueryString unit test"],"failureMessages":[],"fullName":"Advanced Challenge getQueryString unit test limit이 5, page가 999, genre가 Sci-fi일 때, 유효한 쿼리 파라미터를 리턴해야 합니다.","location":null,"status":"pending","title":"limit이 5, page가 999, genre가 Sci-fi일 때, 유효한 쿼리 파라미터를 리턴해야 합니다."},{"ancestorTitles":["Advanced Challenge","getQueryString unit test"],"failureMessages":[],"fullName":"Advanced Challenge getQueryString unit test limit이 null, page가 null, genre가 Sci-fi일 때, 유효한 쿼리 파라미터를 리턴해야 합니다.","location":null,"status":"pending","title":"limit이 null, page가 null, genre가 Sci-fi일 때, 유효한 쿼리 파라미터를 리턴해야 합니다."},{"ancestorTitles":["Advanced Challenge","MovieRankListPagination unit test"],"failureMessages":[],"fullName":"Advanced Challenge MovieRankListPagination unit test 한 페이지 당 영화정보 개수를 정할 수 있는 select 엘리먼트를 작성합니다. (select.page-select)","location":null,"status":"pending","title":"한 페이지 당 영화정보 개수를 정할 수 있는 select 엘리먼트를 작성합니다. (select.page-select)"},{"ancestorTitles":["Advanced Challenge","MovieRankListPagination unit test"],"failureMessages":[],"fullName":"Advanced Challenge MovieRankListPagination unit test 한 페이지 당 영화정보 개수를 3, 5, 10개로 정할 수 있게 option 엘리먼트를 작성합니다.","location":null,"status":"pending","title":"한 페이지 당 영화정보 개수를 3, 5, 10개로 정할 수 있게 option 엘리먼트를 작성합니다."},{"ancestorTitles":["Advanced Challenge","MovieRankListPagination unit test"],"failureMessages":[],"fullName":"Advanced Challenge MovieRankListPagination unit test select 엘리먼트를 제어할 수 있는 React state가 있어야 합니다.","location":null,"status":"pending","title":"select 엘리먼트를 제어할 수 있는 React state가 있어야 합니다."},{"ancestorTitles":["Advanced Challenge","MovieRankListPagination unit test"],"failureMessages":[],"fullName":"Advanced Challenge MovieRankListPagination unit test 이전 페이지 `<` 버튼, 다음 페이지 버튼 `>`이 있어야 합니다.","location":null,"status":"pending","title":"이전 페이지 `<` 버튼, 다음 페이지 버튼 `>`이 있어야 합니다."},{"ancestorTitles":["Advanced Challenge","Pagination feature test"],"failureMessages":[],"fullName":"Advanced Challenge Pagination feature test select.page-select를 이용하여 한 페이지당 영화 개수를 3, 5, 10으로 변경할 수 있어야 합니다.","location":null,"status":"pending","title":"select.page-select를 이용하여 한 페이지당 영화 개수를 3, 5, 10으로 변경할 수 있어야 합니다."},{"ancestorTitles":["Advanced Challenge","Pagination feature test"],"failureMessages":[],"fullName":"Advanced Challenge Pagination feature test `<`, `>` button을 이용하여 다음 페이지 혹은 이전 페이지로 이동할 수 있어야 합니다.","location":null,"status":"pending","title":"`<`, `>` button을 이용하여 다음 페이지 혹은 이전 페이지로 이동할 수 있어야 합니다."},{"ancestorTitles":["Advanced Challenge","CurrentGenre unit test"],"failureMessages":[],"fullName":"Advanced Challenge CurrentGenre unit test MovieRankList 컴포넌트의 자식 컴포넌트로 CurrentGenre를 작성합니다.","location":null,"status":"pending","title":"MovieRankList 컴포넌트의 자식 컴포넌트로 CurrentGenre를 작성합니다."},{"ancestorTitles":["Advanced Challenge","CurrentGenre unit test"],"failureMessages":[],"fullName":"Advanced Challenge CurrentGenre unit test CurrentGenre 컴포넌트의 currentGenre props에 빈 값이 전달되면 \"선택된 장르 : 없음\"으로 표시됩니다.","location":null,"status":"pending","title":"CurrentGenre 컴포넌트의 currentGenre props에 빈 값이 전달되면 \"선택된 장르 : 없음\"으로 표시됩니다."},{"ancestorTitles":["Advanced Challenge","CurrentGenre unit test"],"failureMessages":[],"fullName":"Advanced Challenge CurrentGenre unit test CurrentGenre 컴포넌트의 currentGenre props에 장르 metaverse가 전달되면 \"선택된 장르 : metaverse\"로 표시됩니다.","location":null,"status":"pending","title":"CurrentGenre 컴포넌트의 currentGenre props에 장르 metaverse가 전달되면 \"선택된 장르 : metaverse\"로 표시됩니다."},{"ancestorTitles":["Advanced Challenge","Filter by genre feature test"],"failureMessages":[],"fullName":"Advanced Challenge Filter by genre feature test span.tag를 클릭하면, 해당 장르에 맞는 영화만 보여야 합니다.","location":null,"status":"pending","title":"span.tag를 클릭하면, 해당 장르에 맞는 영화만 보여야 합니다."}],"endTime":1648781537302,"message":"","name":"/Users/sg.yksv77/Desktop/섹션2/HA2-test/im-ha-section-2/client/src/__tests__/index.test.js","startTime":1648781536372,"status":"passed","summary":""}],"wasInterrupted":false}